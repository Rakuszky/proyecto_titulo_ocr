package Login;

import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFrame;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import static org.opencv.imgproc.Imgproc.COLOR_BGR2GRAY;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.videoio.VideoCapture;

public class sistema extends javax.swing.JFrame {

    static {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
    } ///agregado

    //DEFINICIONES NUEVAS
    private DaemonThread myThread = null;
    int count = 0;
    VideoCapture captura = null;

    Mat frame = new Mat();
    MatOfByte mem = new MatOfByte();

    //Clase Daemon
    class DaemonThread implements Runnable {

        protected volatile boolean runnable = false;

        @Override
        public void run() {
            synchronized (this) {
                while (runnable) {
                    if (captura.isOpened()) {
                        while (true) {
                            captura.read(frame);
                            if (!frame.empty()) {
                                setSize(frame.width() + 50, frame.height() + 70);

                                Mat imagemColorida = frame;
                                Mat imagenGris = new Mat();
                                Imgproc.cvtColor(imagemColorida, imagenGris, COLOR_BGR2GRAY);
                                String base = "C:\\Program Files\\opencv\\sources\\data\\haarcascades";
                                CascadeClassifier classificador
                                        = new CascadeClassifier(base + "\\haarcascade_frontalcatface.xml");
                                MatOfRect facesDetectadas = new MatOfRect();
                                classificador.detectMultiScale(imagenGris, facesDetectadas);

                                for (Rect rect : facesDetectadas.toArray()) {
                                    Imgproc.rectangle(imagemColorida, new Point(rect.x, rect.y),
                                            new Point(rect.x + rect.width, rect.y + rect.height),
                                            new Scalar(0, 255, 255), 2);
                                }

                                BufferedImage imagem = new utilidad().convertMatToImage(frame);
                                Graphics g = panelVideo.getGraphics();
                                g.drawImage(imagem, 10, 10, imagem.getWidth(), imagem.getHeight(), null);
                            }
                        }
                    }
                }
            }
        }
    }

    public sistema() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelDatos = new javax.swing.JPanel();
        etiquetaTelefonoSistema = new javax.swing.JLabel();
        etiquetaRunSistema = new javax.swing.JLabel();
        etiquetaNombreSistema = new javax.swing.JLabel();
        etiquetaApellidoSistema = new javax.swing.JLabel();
        etiquetaBlockSistema = new javax.swing.JLabel();
        etiquetaDepartamentoSistema = new javax.swing.JLabel();
        etiquetaEstacionamientoSistema = new javax.swing.JLabel();
        panelVideo = new javax.swing.JPanel();
        iniciarVideo = new javax.swing.JButton();
        pausarVideo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(810, 570));
        setMinimumSize(new java.awt.Dimension(810, 570));
        setResizable(false);

        panelDatos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        etiquetaTelefonoSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaTelefonoSistema.setText("Telefono:");
        panelDatos.add(etiquetaTelefonoSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, -1, -1));

        etiquetaRunSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaRunSistema.setText("RUN:");
        panelDatos.add(etiquetaRunSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        etiquetaNombreSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaNombreSistema.setText("Nombre");
        panelDatos.add(etiquetaNombreSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        etiquetaApellidoSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaApellidoSistema.setText("Apellido:");
        panelDatos.add(etiquetaApellidoSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        etiquetaBlockSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaBlockSistema.setText("Block:");
        panelDatos.add(etiquetaBlockSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        etiquetaDepartamentoSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaDepartamentoSistema.setText("Departamento:");
        panelDatos.add(etiquetaDepartamentoSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        etiquetaEstacionamientoSistema.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        etiquetaEstacionamientoSistema.setText("Estacionamiento:");
        panelDatos.add(etiquetaEstacionamientoSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        panelVideo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iniciarVideo.setText("Iniciar");
        iniciarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarVideoActionPerformed(evt);
            }
        });

        pausarVideo.setText("Pausar");
        pausarVideo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausarVideoActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");

        menuSalir.setText("Salir");
        menuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(menuSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Acerca de");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelVideo, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(iniciarVideo)
                .addGap(104, 104, 104)
                .addComponent(pausarVideo)
                .addGap(162, 162, 162))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(panelVideo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iniciarVideo)
                    .addComponent(pausarVideo))
                .addGap(0, 178, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menuSalirActionPerformed

    private void iniciarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarVideoActionPerformed
        captura = new VideoCapture(0);
        myThread = new DaemonThread();
        Thread t = new Thread(myThread);
        t.setDaemon(true);
        myThread.runnable = true;
        t.start();
        iniciarVideo.setEnabled(false);  //start button
        pausarVideo.setEnabled(true);  // stop button
    }//GEN-LAST:event_iniciarVideoActionPerformed

    private void pausarVideoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausarVideoActionPerformed
        myThread.runnable = false;
        pausarVideo.setEnabled(false);
        iniciarVideo.setEnabled(true);

        captura.release();
    }//GEN-LAST:event_pausarVideoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        //System.out.println("Hola");
        //sistema janela = new sistema();
        // janela.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        //janela.setSize(800, 800);
        //janela.setVisible(true);
        // janela.mostrarVideo();        
        java.awt.EventQueue.invokeLater(() -> {
            new sistema().setVisible(true);
        });

    }

   /* public void mostrarVideo() {
        Mat video = new Mat();
        VideoCapture captura = new VideoCapture(0);
        if (captura.isOpened()) {
            while (true) {
                captura.read(video);
                if (!video.empty()) {
                    setSize(video.width() + 50, video.height() + 70);

                    Mat imagemColorida = video;
                    Mat imagenGris = new Mat();
                    Imgproc.cvtColor(imagemColorida, imagenGris, COLOR_BGR2GRAY);
                    String base = "C:\\Program Files\\opencv\\sources\\data\\haarcascades";
                    CascadeClassifier classificador
                            = new CascadeClassifier(base + "\\haarcascade_frontalcatface.xml");
                    MatOfRect facesDetectadas = new MatOfRect();
                    classificador.detectMultiScale(imagenGris, facesDetectadas);

                    for (Rect rect : facesDetectadas.toArray()) {
                        Imgproc.rectangle(imagemColorida, new Point(rect.x, rect.y),
                                new Point(rect.x + rect.width, rect.y + rect.height),
                                new Scalar(0, 255, 255), 2);
                    }

                    BufferedImage imagem = new utilidad().convertMatToImage(video);
                    Graphics g = panelVideo.getGraphics();
                    g.drawImage(imagem, 10, 10, imagem.getWidth(), imagem.getHeight(), null);
                }
            }
        }

    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel etiquetaApellidoSistema;
    private javax.swing.JLabel etiquetaBlockSistema;
    private javax.swing.JLabel etiquetaDepartamentoSistema;
    private javax.swing.JLabel etiquetaEstacionamientoSistema;
    private javax.swing.JLabel etiquetaNombreSistema;
    private javax.swing.JLabel etiquetaRunSistema;
    private javax.swing.JLabel etiquetaTelefonoSistema;
    private javax.swing.JButton iniciarVideo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuSalir;
    private javax.swing.JPanel panelDatos;
    private javax.swing.JPanel panelVideo;
    private javax.swing.JButton pausarVideo;
    // End of variables declaration//GEN-END:variables
}
